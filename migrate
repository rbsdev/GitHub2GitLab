#!/usr/bin/env bash -e

COLOR_BLUE='\033[34m'
COLOR_GREEN='\033[32m'
COLOR_RESET='\033[0m'
COLOR_YELLOW='\033[33m'

alright() {
  local REPOSITORY=$1
  echo -e "${COLOR_GREEN}${REPOSITORY} finished${COLOR_RESET}"
  cd ..
}

checkout() {
  header 'Checking-out'

  for BRANCH in $(git branch -r | grep -v origin/HEAD | grep -v origin/master); do
    if git rev-parse --verify $BRANCH &> /dev/null; then
      echo ${BRANCH#origin/}
      git checkout -t $BRANCH 2> /dev/null || :
      git pull
    fi
  done

  git checkout master &> /dev/null
  git pull
}

clone() {
  local REPOSITORY=$1

  header 'Cloning'
  [ -d "$REPOSITORY" ] || git clone "git@github.com:rbsdev/${REPOSITORY}.git"
  cd $REPOSITORY
}

fetch() {
  header 'Fetching'
  git fetch
}

header() {
  echo -e "${COLOR_BLUE}${1}${COLOR_RESET}"
}

migrate() {
  local REPOSITORY=$1

  echo
  echo -e "${COLOR_YELLOW}${REPOSITORY} started${COLOR_RESET}"
  clone $REPOSITORY
  fetch
  checkout
  remote $REPOSITORY
  push
  alright $REPOSITORY
  echo
}

push() {
  header 'Pushing'
  git push --all gitlab
  git push --tags gitlab
}

remote() {
  local REPOSITORY=$1
  local URL="git@gitlab.rbs.com.br:rbsdev/${REPOSITORY}.git"

  header 'Remoting'
  echo $URL
  git remote add gitlab $URL 2> /dev/null || :
}

while read REPOSITORY; do
  migrate $REPOSITORY
done
